{"version":3,"file":"static/js/431.f69ccc63.chunk.js","mappings":"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","sources":["components/query/queryButtons.js","components/query/querySpace.js","components/table/index.js","components/table/resultsTable.js","hooks/useFile.js","components/table/columnsTable.js","components/tabs/tabPane.js","components/tabs/index.js","data/constant.js"],"sourcesContent":["import { ButtonToolbar, Button, ButtonGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faDownload } from \"@fortawesome/free-solid-svg-icons\";\n\nconst buttons = [\n  {\n    icon: faPlay,\n    title: \"Run Query\",\n  },\n  {\n    icon: faDownload,\n    title: \"Export data as CSV\",\n  },\n  {\n    icon: faDownload,\n    title: \"Export data as JSON\",\n  },\n];\nfunction QueryButtons() {\n  const buttonsUI = buttons.map(({ icon, title }, index) => (\n    <Button\n      size={\"sm\"}\n      variant={\"outline-primary\"}\n      style={{\n        borderLeft: \"none\",\n        borderTop: \"none\",\n        borderBottom: \"none\",\n        borderRadius: 0,\n        padding: \"0.5rem\",\n      }}\n      className={\"mr-2 query-button\"}\n      key={index}\n    >\n      <FontAwesomeIcon icon={icon} /> {title}\n    </Button>\n  ));\n  return (\n    <ButtonToolbar className=\"mb-3 mt-3\">\n      <ButtonGroup className=\"me-2\">{buttonsUI}</ButtonGroup>\n    </ButtonToolbar>\n  );\n}\n\nexport default QueryButtons;\n","import { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/cobalt.css\";\n\n/**\n * The component to display the code editor for the SQL query\n */\nconst QuerySpace = ({ defaultQuery }) => {\n  return (\n    <CodeMirror\n      value={defaultQuery}\n      options={{\n        mode: \"sql\",\n        theme: \"cobalt\",\n        lineNumbers: true,\n      }}\n    />\n  );\n};\n\nexport default QuerySpace;\n","import {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  usePagination,\n} from \"react-table\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Table,\n  Spinner,\n  FloatingLabel,\n  Pagination,\n  Alert,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nconst pageNumbes = [5, 10, 15, 20, 25];\n/**\n * The parent component used to display the results.\n */\nconst BaseTable = ({\n  columns,\n  data,\n  isLoaded,\n  error,\n  timeOfRequest,\n  paginate,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setGlobalFilter,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  if (!isLoaded) {\n    return (\n      <Container className=\"h-100\">\n        <Row className=\"justify-content-center\">\n          <Spinner animation=\"border\" role=\"status\" as=\"span\" />\n          Loading...\n        </Row>\n      </Container>\n    );\n  } else if (error !== null) {\n    return (\n      <Container className=\"h-100\">\n        <Row className=\"justify-content-center h-100 align-items-center\">\n          <h4 className=\"text-secondary text-center align-self-center\">\n            Could not load results\n          </h4>\n        </Row>\n      </Container>\n    );\n  }\n\n  const dropdownItems = pageNumbes.map((numEntries) => (\n    <option value={numEntries} key={numEntries}>\n      {numEntries}\n    </option>\n  ));\n\n  const entriesDropdown = (\n    <FloatingLabel label=\"No. of entries per page\">\n      <Form.Select\n        onChange={(e) => {\n          setPageSize(parseInt(e.target.value));\n        }}\n        defaultValue={pageSize}\n        disabled={page.length === 0}\n        id=\"numEntriesPerPage\"\n      >\n        {dropdownItems}\n      </Form.Select>\n    </FloatingLabel>\n  );\n\n  const pageControls = (\n    <Pagination size={\"lg\"} className=\"justify-content-center\">\n      <Pagination.First\n        disabled={pageIndex === 0}\n        onClick={() => gotoPage(0)}\n      />\n      <Pagination.Prev disabled={!canPreviousPage} onClick={previousPage} />\n\n      <Pagination.Next disabled={!canNextPage} onClick={nextPage} />\n      <Pagination.Last\n        disabled={pageIndex === pageCount - 1}\n        onClick={() => gotoPage(pageCount - 1)}\n      />\n    </Pagination>\n  );\n\n  const resultStats = (\n    <Col lg={4}>\n      <Alert variant={\"success\"}>\n        <FontAwesomeIcon icon={faCheck} /> Fetched{\" \"}\n        <strong>{rows.length}</strong> results in{\" \"}\n        <strong>{timeOfRequest / 1000}</strong> seconds\n      </Alert>\n    </Col>\n  );\n\n  const finalResult = paginate ? page : rows;\n\n  return (\n    <Container fluid className=\"h-100\">\n      <Row>\n        {timeOfRequest ? resultStats : <></>}\n        <Col lg={4}>\n          <FloatingLabel label=\"Search to filter results\">\n            <Form.Control\n              aria-label=\"Text input to filter results\"\n              onInput={(e) => {\n                setGlobalFilter(e.target.value);\n              }}\n              id=\"filterInput\"\n              disabled={rows.length === 0}\n            />\n          </FloatingLabel>\n        </Col>\n        <Col lg={4}>{paginate ? entriesDropdown : <></>}</Col>\n      </Row>\n      <Row\n        style={{\n          maxHeight: \"29vh\",\n          overflowY: \"auto\",\n          overflowX: \"auto\",\n        }}\n        className=\"mt-3\"\n      >\n        <Table {...getTableProps()} striped hover size={\"sm\"} className=\"h-100\">\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render(\"Header\")}{\" \"}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {finalResult.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Row>\n      <Row className=\"mt-2\">\n        <Col>{paginate ? pageControls : <></>}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default BaseTable;\n","import { useMemo } from \"react\";\nimport BaseTable from \".\";\n\n/**\n * The table with the results of the run query operation. Uses the BaseTable component to display the results in a\n * table.\n */\nfunction ResultsTable(props) {\n  const { result, isLoaded, error, timeOfRequest } = props;\n  const data = useMemo(() => result, [result]);\n\n  const columns = useMemo(() => {\n    if (result.length === 0) {\n      return [];\n    }\n    return Object.keys(result[0]).map((key) => ({\n      Header: key,\n      accessor: key,\n      defaultCanSort: true,\n    }));\n  }, [result]);\n\n  return (\n    <BaseTable\n      columns={columns}\n      data={data}\n      isLoaded={isLoaded}\n      error={error}\n      paginate\n      timeOfRequest={timeOfRequest}\n    />\n  );\n}\n\nexport default ResultsTable;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { getFieldDetails, parseCSV } from \"../utils\";\nimport { FILE_NAMES } from \"../data/constant\";\n\nfunction useFile(fileName) {\n  const startTime = useMemo(() => new Date().getTime(), []);\n  const [endTime, setEndTime] = useState(new Date().getTime());\n  const [result, setResult] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // The endpoint is used only when the app is in production.\n  const fetchUrl = `https://api.github.com/repos/graphql-compose/graphql-compose-examples/contents/examples/northwind/data/csv/${fileName}.csv`;\n\n  useEffect(() => {\n    // If the file name can't be found.\n    if (FILE_NAMES.indexOf(fileName) === -1) {\n      setIsLoaded(true);\n    } else {\n      fetch(fetchUrl)\n        .then((res) => {\n          return res.json();\n        })\n        .then(\n          (res) => {\n            const rawResults = parseCSV(atob(res.content));\n            setResult(\n              rawResults.map((rawResult) => {\n                Object.keys(rawResult).forEach((key) => {\n                  rawResult[key] = getFieldDetails(key).processFn(\n                    rawResult[key]\n                  );\n                });\n                return rawResult;\n              })\n            );\n            setIsLoaded(true);\n            setEndTime(new Date().getTime());\n          },\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n            setEndTime(new Date().getTime());\n          }\n        );\n    }\n  }, [fetchUrl, fileName]);\n\n  return {\n    error,\n    isLoaded,\n    result,\n    timeOfRequest: endTime - startTime,\n  };\n}\n\nexport default useFile;\n","import { useMemo } from \"react\";\n\nimport BaseTable from \"./index\";\n\nimport { getFieldDetails } from \"../../utils\";\n\n/**\n * The table with the results of the columns of the run query operation. Uses the BaseTable component to display the\n * results in a table.\n */\nfunction ColumnsTable({ result, isLoaded, error }) {\n  const data = useMemo(() => {\n    if (result.length === 0) {\n      return [];\n    }\n    return Object.keys(result[0]).map((key) => ({\n      column: key,\n      type: getFieldDetails(key).type,\n    }));\n  }, [result]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Column\",\n        accessor: \"column\",\n        defaultCanSort: true,\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n        defaultCanSort: true,\n      },\n    ],\n    []\n  );\n\n  return (\n    <BaseTable\n      columns={columns}\n      data={data}\n      isLoaded={isLoaded}\n      error={error}\n    />\n  );\n}\n\nexport default ColumnsTable;\n","import QueryButtons from \"../query/queryButtons\";\nimport QuerySpace from \"../query/querySpace\";\nimport { Row, Tabs, Tab } from \"react-bootstrap\";\nimport ResultsTable from \"../table/resultsTable\";\nimport useFile from \"../../hooks/useFile\";\nimport ColumnsTable from \"../table/columnsTable\";\n\nconst TabPane = ({ tab }) => {\n  const { result, isLoaded, error, timeOfRequest } = useFile(tab.title);\n  return (\n    <>\n      <QueryButtons />\n      <Row\n        style={{\n          width: \"100%\",\n          height: \"20vh\",\n        }}\n      >\n        <QuerySpace defaultQuery={tab.defaultQuery} />\n      </Row>\n      <hr />\n      <Tabs defaultActiveKey=\"results\" className=\"mb-3\">\n        <Tab eventKey=\"results\" title=\"Results\">\n          <ResultsTable\n            result={result}\n            isLoaded={isLoaded}\n            error={error}\n            tab={tab}\n            timeOfRequest={timeOfRequest}\n          />\n        </Tab>\n        <Tab eventKey=\"columns\" title=\"Columns\">\n          <ColumnsTable\n            result={result}\n            isLoaded={isLoaded}\n            error={error}\n            tab={tab}\n          />\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default TabPane;\n","import { Container, CloseButton, Tab, Nav, Row } from \"react-bootstrap\";\nimport { closeTab } from \"../../utils\";\nimport TabPane from \"./tabPane\";\n\nfunction QueryTabs(props) {\n  const tabs = props.tabs.map((tab) => (\n    <Nav.Item key={tab.eventKey}>\n      <Nav.Link\n        eventKey={tab.eventKey}\n        active={props.activeKey === tab.eventKey}\n        href={tab.href}\n      >\n        {tab.title}{\" \"}\n        <CloseButton\n          style={{\n            fontSize: \"0.5rem\",\n          }}\n          onClick={(e) => {\n            e.stopPropagation();\n            const [newTabs, newActiveKey] = closeTab(tab.eventKey, props.tabs);\n            props.setTabs(newTabs);\n            props.setActiveKey(newActiveKey);\n          }}\n        />\n      </Nav.Link>\n    </Nav.Item>\n  ));\n\n  const tabPanes = props.tabs.map((tab) => (\n    <Tab.Pane\n      eventKey={tab.eventKey}\n      active={props.activeKey === tab.eventKey}\n      key={tab.eventKey}\n    >\n      <TabPane tab={tab} />\n    </Tab.Pane>\n  ));\n\n  // If there are no open tabs currently.\n  if (props.tabs.length === 0) {\n    return (\n      <Container className=\"h-100\">\n        <Row className=\"justify-content-center h-100 align-items-center\">\n          <h4 className=\"text-secondary text-center align-self-center\">\n            Nothing to display. Begin a new query or click on one of the tables\n          </h4>\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <Tab.Container\n      onSelect={(activeKey) => {\n        props.setActiveKey(activeKey === null ? \"\" : activeKey);\n      }}\n    >\n      <Row>\n        <Nav variant=\"tabs\">{tabs}</Nav>\n      </Row>\n      <Tab.Content>{tabPanes}</Tab.Content>\n    </Tab.Container>\n  );\n}\n\nexport default QueryTabs;\n","export const FILE_NAMES = [\n  \"categories\",\n  \"customers\",\n  \"employee_territories\",\n  \"employees\",\n  \"order_details\",\n  \"territories\",\n];\n"],"names":["buttons","icon","faPlay","title","faDownload","buttonsUI","map","index","Button","size","variant","style","borderLeft","borderTop","borderBottom","borderRadius","padding","className","ButtonToolbar","ButtonGroup","defaultQuery","value","options","mode","theme","lineNumbers","pageNumbes","columns","data","isLoaded","error","timeOfRequest","paginate","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","rows","prepareRow","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setGlobalFilter","setPageSize","state","pageIndex","pageSize","Container","Row","Spinner","animation","role","as","dropdownItems","numEntries","entriesDropdown","FloatingLabel","label","Form","onChange","e","parseInt","target","defaultValue","disabled","length","id","pageControls","Pagination","onClick","resultStats","Col","lg","Alert","faCheck","finalResult","fluid","onInput","maxHeight","overflowY","overflowX","Table","striped","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","row","getRowProps","cells","cell","getCellProps","props","result","useMemo","Object","keys","key","Header","accessor","defaultCanSort","fileName","startTime","Date","getTime","useState","endTime","setEndTime","setResult","setIsLoaded","setError","fetchUrl","useEffect","FILE_NAMES","fetch","then","res","json","rawResults","parseCSV","atob","content","rawResult","forEach","getFieldDetails","processFn","type","tab","useFile","width","height","Tabs","defaultActiveKey","Tab","eventKey","tabs","Nav","active","activeKey","href","CloseButton","fontSize","stopPropagation","closeTab","newTabs","newActiveKey","setTabs","setActiveKey","tabPanes","onSelect"],"sourceRoot":""}